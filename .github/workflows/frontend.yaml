# This defines the name of the workflow as it will appear in the "Actions" tab of the GitHub repository.
name: Frontend CI and Tests

# The on key lets you define the events that trigger when the workflow is run. You can define multiple events here.
on:
  # Add the workflow_dispatch event if you want to be able to manually run this workflow from the UI.
  workflow_dispatch:
  # Add the push event, so that the workflow runs automatically every time a commit is pushed to a branch prefixed with branch-.
  push:
    branches: [ branch-* ]
  # Add the pull_request event, so that the workflow runs automatically every time a pull request is created or updated to merge with the main branch.
  pull_request:
    branches: [ master ]

# The jobs key groups together all the jobs that run in the workflow file.
jobs:
  # This line defines a job with the ID build that is stored within the jobs key.
  build:
    # This job uses a matrix strategy to run the job once on version 18.x of Node.js.
    strategy:
      matrix:
        # The platform key defines the operating system that the job runs on.
        platform: [ ubuntu-latest, windows-latest, macos-latest ]
        # node-version: [14.x, 16.x, 18.x, 20.x]
        node-version: [ 18.x ]

    # The runs-on key in this example configures the job to run on a GitHub-hosted runner or a self-hosted runner, depending on the repository running the workflow.
    runs-on: ${{ matrix.platform }}
    
    # The steps key groups together all the steps that will run as part of the check-links job. Each job in a workflow has its own steps section.
    steps:
      - name: Checkout
      # The uses key tells the job to retrieve the action named actions/checkout. 
      # This is an action that checks out your repository and downloads it to the runner, 
      # allowing you to run actions against your code (such as testing tools). 
      # You must use the checkout action any time your workflow will use the repository's code or you are using an action defined in the repository.
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        # This step uses the actions/setup-node action to install the specified version of the Node.js software package on the runner, 
        # which gives you access to the npm command.
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies
      # The run key tells the job to execute a command on the runner. 
      # In this example, npm ci is used to install the npm software packages for the project.
        run: npm ci
        working-directory: ./frontend

      - name: Build
        # This step runs the `build` script if there is one specified under the 
      # `scripts` key in your `package.json` file.
        run: npm run build --if-present
        working-directory: ./frontend

      - name: Test
      # This step runs the `test` script that is specified under the `scripts` 
      # key in your `package.json` file.
        run: npm test
        working-directory: ./frontend
